# Generated by Django 4.0.8 on 2022-11-23 00:03

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id_rol', models.IntegerField(db_column='id_rol', primary_key=True, serialize=False)),
                ('cargo', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Rol',
                'db_table': 'Rol',
            },
        ),
        migrations.CreateModel(
            name='Sucursal',
            fields=[
                ('id_sucursal', models.IntegerField(db_column='id_sucursal', primary_key=True, serialize=False)),
                ('sucursal', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Sucursal',
                'db_table': 'Sucursal',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('link', models.CharField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('id_rol', models.ForeignKey(db_column='id_rol', null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.rol')),
                ('id_sucursal', models.ForeignKey(db_column='id_sucursal', null=True, on_delete=django.db.models.deletion.CASCADE, to='usuarios.sucursal')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Usuarios_usuario',
            },
        ),
    ]
